//ðŸ§©Don't Edit this file.âœ¨Generated in Wed Mar 13 2024 11:27:31 GMT+0700 (Indochina Time)âœ¨
model Admin {
  id        Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(80)
  password  String?   @db.VarChar(80)
  firstname String    @db.VarChar(255)
  lastname  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("admin")
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CarGuest {
  id           Int       @id @default(autoincrement())
  licensePlate String
  color        String
  brand        String
  model        String
  year         Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
  Log          Log[]

  @@map("car_guest")
}

model Car {
  id           Int       @id @default(autoincrement())
  licensePlate String    @db.VarChar(12)
  color        String    @db.VarChar(40)
  brand        String    @db.VarChar(40)
  model        String    @db.VarChar(80)
  year         Int
  province     String?   @db.VarChar(40)
  imageUrl     String?   @db.VarChar(255)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
  staff        Staff     @relation(fields: [staffId], references: [id])
  staffId      Int
  Log          Log[]

  @@map("car")
}

model Device {
  id           Int       @id @default(autoincrement())
  name         String    @db.VarChar(255)
  description  String?   @db.VarChar(255)
  brand        String?   @db.VarChar(255)
  price        Float     @default(0)
  deviceSerial String?   @db.VarChar(255)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
  zone         Zone      @relation(fields: [zoneId], references: [id])
  zoneId       Int

  @@map("device")
}


model Log {
  id             Int       @id @default(autoincrement())
  zoneId         Int
  zone           Zone      @relation(fields: [zoneId], references: [id])
  staffId        Int
  staff          Staff     @relation(fields: [staffId], references: [id])
  carId          Int?
  car            Car?      @relation(fields: [carId], references: [id])
  carGuestId     Int?
  carGuest       CarGuest? @relation(fields: [carGuestId], references: [id])
  arrowDirection String?   @db.VarChar(4)
  licenseUrl     String?   @db.VarChar(255)
  timestamp      DateTime  @default(now())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?

  @@map("log")
}

model Parking {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  amount      Int       @default(0)
  zone        Zone      @relation(fields: [zoneId], references: [id])
  zoneId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  @@map("parking")
}

model Staff {
  id          Int           @id @default(autoincrement())
  firstname   String        @db.VarChar(255)
  lastname    String        @db.VarChar(255)
  email       String        @db.VarChar(80)
  phoneNumber String        @db.VarChar(20)
  position    StaffPosition @default(Other)
  status      Boolean       @default(false)
  imageUrl    String?       @db.VarChar(255)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedAt   DateTime?
  cars        Car[]
  Log         Log[]

  @@map("staff")
}

enum StaffPosition {
  Professor
  Researcher
  Assistant
  Staff
  Student
  Other
}

model Zone {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(255)
  description     String?   @db.VarChar(255)
  occupancy       Int
  maximumCapacity Int
  address         String?   @db.VarChar(255)
  latitude        Float?
  longitude       Float?
  imageUrl        String?   @db.VarChar(255)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  devices         Device[]
  parking         Parking[]
  Log             Log[]

  @@map("zone")
}

model Emergency {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  phoneNumber String    @db.VarChar(20)
  active      Boolean?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  @@map("emergency")
}
